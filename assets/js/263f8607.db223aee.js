"use strict";(self.webpackChunkmonolith_docs=self.webpackChunkmonolith_docs||[]).push([[297],{32920:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"resources/extras/rust/rust-basic","title":"Rust integration","description":"Rust Examples","source":"@site/versioned_docs/version-0.0.1/resources/extras/rust/rust-basic.md","sourceDirName":"resources/extras/rust","slug":"/resources/extras/rust/rust-basic","permalink":"/docs/0.0.1/resources/extras/rust/rust-basic","draft":false,"unlisted":false,"editUrl":"https://github.com/jbirbal-skydom/monolith-docs/tree/master/versioned_docs/version-0.0.1/resources/extras/rust/rust-basic.md","tags":[],"version":"0.0.1","frontMatter":{"title":"Rust integration","draft":false},"sidebar":"resourceSidebar","previous":{"title":"Rust","permalink":"/docs/0.0.1/category/rust"}}');var s=t(74848),i=t(28453),a=t(42982);const o={title:"Rust integration",draft:!1},l=void 0,d={},u=[{value:"Rust Examples",id:"rust-examples",level:2},{value:"CodAPI",id:"codapi",level:2},{value:"Your First Rust Program",id:"your-first-rust-program",level:3},{value:"Working with Variables",id:"working-with-variables",level:3},{value:"Functions in Rust",id:"functions-in-rust",level:3},{value:"Error Handling Example",id:"error-handling-example",level:3},{value:"Generate Image",id:"generate-image",level:3},{value:"Image Generation Example",id:"image-generation-example",level:2}];function c(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"rust-examples",children:"Rust Examples"}),"\n",(0,s.jsx)(n.h2,{id:"codapi",children:"CodAPI"}),"\n","\n",(0,s.jsx)(n.p,{children:"Welcome to our interactive Rust tutorial! This page demonstrates how to use Rust with live code examples."}),"\n",(0,s.jsx)(n.h3,{id:"your-first-rust-program",children:"Your First Rust Program"}),"\n",(0,s.jsx)(n.p,{children:'Let\'s start with a simple "Hello, World!" program:'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'    println!("Hello, World!");\n'})}),"\n",(0,s.jsx)(a.A,{sandbox:"rust",files:{"main.rs":'fn main() {\n  println!("Hello, World!");\n}'}}),"\n",(0,s.jsx)(n.p,{children:"The program above demonstrates the basic structure of a Rust program. Let's break down what each part does:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fn main()"})," - This declares the main function, the entry point of our program"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"println!"})," - This is a macro that prints text to the console"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"working-with-variables",children:"Working with Variables"}),"\n",(0,s.jsx)(n.p,{children:"Here's an example showing how to work with variables in Rust:"}),"\n",(0,s.jsx)(a.A,{sandbox:"rust",files:{"main.rs":'fn main() {\n  let x = 5;\n  let y = 10;\n  println!("x = {}, y = {}", x, y);\n  println!("sum = {}", x + y);\n}'}}),"\n",(0,s.jsx)(n.h3,{id:"functions-in-rust",children:"Functions in Rust"}),"\n",(0,s.jsx)(n.p,{children:"Let's explore how functions work in Rust:"}),"\n",(0,s.jsx)(a.A,{sandbox:"rust",files:{"main.rs":'fn add(a: i32, b: i32) -> i32 {\n  a + b  // Note: no semicolon means this is a return expression\n}\n\nfn main() {\n  let result = add(5, 3);\n  println!("5 + 3 = {}", result);\n}'}}),"\n",(0,s.jsx)(n.h3,{id:"error-handling-example",children:"Error Handling Example"}),"\n",(0,s.jsx)(n.p,{children:"Here's how to handle potential errors in Rust:"}),"\n",(0,s.jsx)(a.A,{sandbox:"rust",files:{"main.rs":'fn divide(a: f64, b: f64) -> Result<f64, String> {\n  if b == 0.0 {\n      Err(String::from("Division by zero!"))\n  } else {\n      Ok(a / b)\n  }\n}\n\nfn main() {\n  match divide(10.0, 2.0) {\n      Ok(result) => println!("10 / 2 = {}", result),\n      Err(e) => println!("Error: {}", e),\n  }\n  match divide(10.0, 0.0) {\n      Ok(result) => println!("10 / 0 = {}", result),\n      Err(e) => println!("Error: {}", e),\n  }\n}'}}),"\n",(0,s.jsx)(n.h3,{id:"generate-image",children:"Generate Image"}),"\n",(0,s.jsx)(n.h2,{id:"image-generation-example",children:"Image Generation Example"}),"\n",(0,s.jsx)(n.p,{children:"Here's an example of generating a gradient image using Rust:"}),"\n",(0,s.jsx)(a.A,{sandbox:"rust",files:{"main.rs":'\nuse image::{ImageBuffer, Rgb};\nuse base64::Engine;  // Add this import\n\nfn main() {\n  // Create a 256x256 image with a simple gradient\n  let width = 256u32;\n  let height = 256u32;\n  let mut img = ImageBuffer::new(width, height);\n  // Fill with a purple to orange gradient\n  for (x, y, pixel) in img.enumerate_pixels_mut() {\n      let r = (x as f32 / width as f32*255.0) as u8;\n      let b = (y as f32 / height as f32*255.0) as u8;\n      *pixel = Rgb([r, 0, b]);\n  }\n  // Convert to PNG using a buffer\n  let mut png_data: Vec<u8> = Vec::new();\n  {\n      let mut cursor = std::io::Cursor::new(&mut png_data);\n      img.write_to(&mut cursor, image::ImageFormat::Png)\n          .expect("Failed to encode image");\n  }\n  // Encode to base64\n  let base64 = base64::engine::general_purpose::STANDARD.encode(&png_data);\n  println!("data:image/png;base64,{}", base64);\n\n}'}}),"\n",(0,s.jsx)(n.p,{children:"Each example above is interactive - you can modify the code and run it directly in your browser!"})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},42982:(e,n,t)=>{t.d(n,{A:()=>d});var r=t(96540),s=t(26069),i=t.n(s),a=t(71765);const o={editorContainer:"editorContainer_yzmg",editorHeader:"editorHeader_iYd9",fileName:"fileName_WI65",editorBody:"editorBody_WkRc",codeEditor:"codeEditor_vSAr",editorFooter:"editorFooter_aj9_",runButton:"runButton_U1N7",outputPanel:"outputPanel_LaC9",error:"error_bQjo",outputContent:"outputContent_JCwt"};var l=t(74848);const d=e=>{let{sandbox:n="rust",files:t={},initialCode:s=""}=e;const[d,u]=(0,r.useState)(t["main.rs"]||s||'fn main() {\n    println!("Hello, World!");\n}'),[c,m]=(0,r.useState)(""),[h,p]=(0,r.useState)(!1),[g,x]=(0,r.useState)(null),[f,b]=(0,r.useState)(null);return(0,l.jsxs)("div",{className:o.editorContainer,children:[(0,l.jsx)("style",{children:"\n  .token.comment { color: #6a9955; }\n  .token.keyword { color: #569cd6; }\n  .token.string { color: #ce9178; }\n  .token.function { color: #dcdcaa; }\n  .token.operator { color: #d4d4d4; }\n  .token.punctuation { opacity: 0.7; }\n"}),(0,l.jsx)("div",{className:o.editorHeader,children:(0,l.jsx)("span",{className:o.fileName,children:"main.rs"})}),(0,l.jsx)("div",{className:o.editorBody,children:(0,l.jsx)(i(),{value:d,onValueChange:u,highlight:e=>a.Prism.highlight(e,a.Prism.languages.rust).split("\n").map(((e,n)=>`<span class='editorLineNumber'>${n+1}</span>${e}`)).join("\n"),padding:10,className:o.codeEditor,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:14,outline:0,lineHeight:1.5}})}),(0,l.jsx)("div",{className:o.editorFooter,children:(0,l.jsx)("button",{onClick:async()=>{p(!0),x(null),m(""),b(null);try{const e=await fetch("https://codapi.skydom.ai/v1/exec",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sandbox:n,command:"run",files:{"main.rs":d}})}),t=await e.json();if(t.ok){const e=t.stdout.trim();m(t.stdout),e.startsWith("data:image/png;base64,")&&b(e)}else x(t.stderr||"Execution failed")}catch(e){x(e.message)}finally{p(!1)}},disabled:h,className:o.runButton,children:h?"\u27f3 Running...":"\u25b6 Run"})}),(c||g||f)&&(0,l.jsxs)("div",{className:o.outputPanel,children:[(0,l.jsx)("div",{className:o.outputHeader,children:"Output"}),(0,l.jsx)("div",{className:`${o.outputContent} ${g?o.error:""}`,children:g||c}),f&&(0,l.jsx)("div",{className:o.imagePreview,children:(0,l.jsx)("img",{src:f,alt:"Generated"})})]})]})}}}]);